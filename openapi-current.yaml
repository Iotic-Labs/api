components:
    headers:
        Iotics-ClientAppId:
            description: User namespace used to group all the requests/responses.
            required: true
            schema:
                type: string
        Iotics-ClientRef:
            description: Optional client reference. Any responses associated with
                the request will include this reference.
            required: false
            schema:
                type: string
        Iotics-ConsumerGroup:
            description: Used for group listener, optional - Not implemented yet.
            required: false
            schema:
                type: string
        Iotics-TransactionRef:
            description: Used to loosely link requests/responses in a distributed
                environment each layer can add its own id to the list. Transaction
                ref is limited to a max of 16 elements per list and, for each list
                item, a max length of 36 characters.
            required: false
            schema:
                type: string
    parameters:
        clientAppId:
            description: User namespace used to group all the requests/responses.
            in: header
            name: Iotics-ClientAppId
            required: true
            schema:
                type: string
        clientRef:
            description: Optional client reference. Any responses associated with
                the request will include this reference.
            in: header
            name: Iotics-ClientRef
            required: false
            schema:
                type: string
        consumerGroup:
            description: Used for group listener, optional - Not implemented yet.
            in: header
            name: Iotics-ConsumerGroup
            required: false
            schema:
                type: string
        format:
            description: Format of metadata value.
            in: query
            name: format
            required: false
            schema:
                type: string
        lang:
            description: |-
                Language code for applicable text. E.g. if set, a text search will only consider matching words in this
                language.
            in: query
            name: lang
            required: false
            schema:
                type: string
        limit:
            description: |-
                Limit is a request parameter to limit the number of results.
                Max number of results (under configuration max limit constraint)
            in: query
            name: limit
            required: false
            schema:
                description: Max number of results
                format: int64
                type: integer
        offset:
            description: |-
                Offset is a request parameter applicable in conjunction with the "Limit"
                request parameter to start returning results from the given offset.
            in: query
            name: offset
            required: false
            schema:
                description: Result number to start from
                format: int64
                type: integer
        requestTimeout:
            description: |-
                Client request timeout used to stop the request processing once
                the timeout is reached.
            in: header
            name: Iotics-RequestTimeout
            required: true
            schema:
                example: '2000-01-23T04:56:07.000'
                format: date-time
                type: string
        scope:
            description: |-
                Scope is a request parameter used to apply a scope to a given request.
                - GLOBAL - go over the network/target the public Twin
                - LOCAL - restrain the request to the local host
            in: query
            name: scope
            required: false
            schema:
                $ref: '#/components/schemas/Scope'
        transactionRef:
            description: Used to loosely link requests/responses in a distributed
                environment each layer can add its own id to the list. Transaction
                ref is limited to a max of 16 elements per list and, for each list
                item, a max length of 36 characters.
            in: header
            name: Iotics-TransactionRef
            required: false
            schema:
                type: string
    schemas:
        AdvancedSearchRequestPayload:
            description: Search request payload.
            properties:
                filter:
                    description: The search filter, expressed as a JSON-encoded AST
                        (in JSONLogic style)
                    type: string
                responseType:
                    $ref: '#/components/schemas/ResponseType'
            type: object
        CreateFeedRequest:
            description: CreateFeedRequestCreate is used to create a new feed in a
                given twin.
            properties:
                args:
                    $ref: '#/components/schemas/CreateFeedRequestArguments'
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/CreateFeedRequestPayload'
            type: object
        CreateFeedRequestArguments:
            description: Arguments describes the mandatory arguments to identify the
                twin the feed belongs to.
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        CreateFeedRequestPayload:
            description: Payload describes the data needed to create a feed.
            properties:
                id:
                    description: Feed identifier string representation (simple string)
                        (unique within the scope of a twin identifier's feed set)
                    type: string
            type: object
        CreateFeedResponse:
            description: CreateFeedResponse describes a created feed.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/CreateFeedResponsePayload'
            type: object
        CreateFeedResponsePayload:
            description: CreateFeedResponse payload.
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
            type: object
        CreateTwinRequest:
            description: CreateTwinRequest is made to create a twin (idempotent).
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/CreateTwinRequestPayload'
            type: object
        CreateTwinRequestPayload:
            description: Arguments identifies the twin to create.
            properties:
                id:
                    description: Twin identifier string representation (simple string)
                    type: string
            type: object
        CreateTwinResponse:
            description: CreateTwinResponse is received when a twin has been created.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    twinId:
                        hostId: hostId
                        id: id
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/CreateTwinResponsePayload'
            type: object
        CreateTwinResponsePayload:
            description: Payload identifies the twin which was created.
            example:
                twinId:
                    hostId: hostId
                    id: id
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        DeleteFeedRequest:
            description: DeleteFeedRequest is used to delete a feed from a given twin.
            properties:
                args:
                    $ref: '#/components/schemas/DeleteFeedRequestArguments'
                headers:
                    $ref: '#/components/schemas/Headers'
            type: object
        DeleteFeedRequestArguments:
            description: DeleteFeedRequest arguments.
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
            type: object
        DeleteFeedResponse:
            description: DeleteFeedResponse describes a deleted feed.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    feedId:
                        hostId: hostId
                        id: id
                        twinId: twinId
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/DeleteFeedResponsePayload'
            type: object
        DeleteFeedResponsePayload:
            description: DeleteFeedResponse payload.
            example:
                feedId:
                    hostId: hostId
                    id: id
                    twinId: twinId
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
            type: object
        DeleteInputRequestArguments:
            description: DeleteInputRequest arguments.
            properties:
                inputId:
                    $ref: '#/components/schemas/InputID'
            type: object
        DeleteInputResponse:
            description: DeleteInputResponse describes a deleted input.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/DeleteInputResponsePayload'
            type: object
        DeleteInputResponsePayload:
            description: DeleteInputResponse payload.
            properties:
                inputId:
                    $ref: '#/components/schemas/InputID'
            type: object
        DeleteTwinRequest:
            description: DeleteRequest is made to delete a particular twin.
            properties:
                args:
                    $ref: '#/components/schemas/DeleteTwinRequestArguments'
                headers:
                    $ref: '#/components/schemas/Headers'
            type: object
        DeleteTwinRequestArguments:
            description: Arguments identifies the twin to delete.
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        DeleteTwinResponse:
            description: Deleted is received when a twin has been deleted.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    twinId:
                        hostId: hostId
                        id: id
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/DeleteTwinResponsePayload'
            type: object
        DeleteTwinResponsePayload:
            description: Payload identifies the twin which was deleted.
            example:
                twinId:
                    hostId: hostId
                    id: id
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        DescribeFeedRequest:
            description: 'Description of twin: Provides public metadata lookup for
                individual resources.'
            properties:
                args:
                    $ref: '#/components/schemas/DescribeFeedRequestArguments'
                headers:
                    $ref: '#/components/schemas/Headers'
            type: object
        DescribeFeedRequestArguments:
            description: DescribeFeedRequest arguments.
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
            type: object
        DescribeFeedResponse:
            description: Describe feed response.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    feedId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                    result:
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        storeLast: true
                        values:
                        -   comment: comment
                            dataType: dataType
                            label: label
                            unit: unit
                        -   comment: comment
                            dataType: dataType
                            label: label
                            unit: unit
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/DescribeFeedResponsePayload'
            type: object
        DescribeFeedResponseMetaResult:
            description: Metadata result databag.
            example:
                properties:
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                storeLast: true
                values:
                -   comment: comment
                    dataType: dataType
                    label: label
                    unit: unit
                -   comment: comment
                    dataType: dataType
                    label: label
                    unit: unit
            properties:
                properties:
                    description: Custom properties associated with this feed.
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                storeLast:
                    description: |-
                        Whether this feed might have its most recent data sample stored. If so, it can be retrieved via FetchLastStored
                        request. (See interest API)
                    type: boolean
                values:
                    description: Values semantically describing the share payload
                        of Feed
                    items:
                        $ref: '#/components/schemas/Value'
                    type: array
            type: object
        DescribeFeedResponsePayload:
            description: DescribeFeedResponse payload.
            example:
                feedId:
                    hostId: hostId
                    id: id
                    twinId: twinId
                result:
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    storeLast: true
                    values:
                    -   comment: comment
                        dataType: dataType
                        label: label
                        unit: unit
                    -   comment: comment
                        dataType: dataType
                        label: label
                        unit: unit
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
                result:
                    $ref: '#/components/schemas/DescribeFeedResponseMetaResult'
            type: object
        DescribeInputRequestArguments:
            description: DescribeInputRequest arguments.
            properties:
                inputId:
                    $ref: '#/components/schemas/InputID'
            type: object
        DescribeInputResponse:
            description: DescribeInputResponse provides metadata lookup for individual
                input resources.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/DescribeInputResponsePayload'
            type: object
        DescribeInputResponseMetaResult:
            description: DescribeInputResponse metadata result.
            properties:
                properties:
                    description: Custom properties associated with this input.
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                values:
                    description: Values semantically describing the Input messages
                    items:
                        $ref: '#/components/schemas/Value'
                    type: array
            type: object
        DescribeInputResponsePayload:
            description: DescribeInputResponse payload.
            properties:
                inputId:
                    $ref: '#/components/schemas/InputID'
                result:
                    $ref: '#/components/schemas/DescribeInputResponseMetaResult'
            type: object
        DescribeTwinRequest:
            description: 'Description of twin: Provides public metadata lookup for
                individual resources.'
            properties:
                args:
                    $ref: '#/components/schemas/DescribeTwinRequestArguments'
                headers:
                    $ref: '#/components/schemas/Headers'
            type: object
        DescribeTwinRequestArguments:
            description: Only one action argument is necessary.
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        DescribeTwinResponse:
            description: The response for a description request on this twin.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    result:
                        createdAt: '2000-01-23T04:56:07.000Z'
                        feeds:
                        -   feedId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            storeLast: true
                        -   feedId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            storeLast: true
                        inputs:
                        -   inputId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                        -   inputId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                        location:
                            lat: 0.8008281904610115
                            lon: 6.027456183070403
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        updatedAt: '2000-01-23T04:56:07.000Z'
                    twinId:
                        hostId: hostId
                        id: id
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/DescribeTwinResponsePayload'
            type: object
        DescribeTwinResponseMetaResult:
            description: Metadata result data bag for this feed.
            example:
                createdAt: '2000-01-23T04:56:07.000Z'
                feeds:
                -   feedId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                    storeLast: true
                -   feedId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                    storeLast: true
                inputs:
                -   inputId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                -   inputId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                location:
                    lat: 0.8008281904610115
                    lon: 6.027456183070403
                properties:
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                updatedAt: '2000-01-23T04:56:07.000Z'
            properties:
                createdAt:
                    description: Twin createdAt timestamp.
                    format: date-time
                    type: string
                feeds:
                    items:
                        $ref: '#/components/schemas/FeedMeta'
                    type: array
                inputs:
                    items:
                        $ref: '#/components/schemas/InputMeta'
                    type: array
                location:
                    $ref: '#/components/schemas/GeoLocation'
                properties:
                    description: Custom properties associated with this twin.
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                updatedAt:
                    description: Twin updatedAt timestamp.
                    format: date-time
                    type: string
                visibility:
                    $ref: '#/components/schemas/Visibility'
            type: object
        DescribeTwinResponsePayload:
            description: Payload of described twins.
            example:
                result:
                    createdAt: '2000-01-23T04:56:07.000Z'
                    feeds:
                    -   feedId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        storeLast: true
                    -   feedId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        storeLast: true
                    inputs:
                    -   inputId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                    -   inputId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                    location:
                        lat: 0.8008281904610115
                        lon: 6.027456183070403
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    updatedAt: '2000-01-23T04:56:07.000Z'
                twinId:
                    hostId: hostId
                    id: id
            properties:
                result:
                    $ref: '#/components/schemas/DescribeTwinResponseMetaResult'
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        DispatchSearchResponse:
            description: Dispatch Search Response message.
            type: object
        ExplorerRequestPayload:
            description: Explorer request payload.
            properties:
                keyword:
                    description: keyword defines the search term associated to the
                        explorer request.
                    type: string
                resultContentType:
                    $ref: '#/components/schemas/SparqlResultType'
            type: object
        FeedData:
            description: FeedData is set of datapoints shared via a Feed.
            properties:
                data:
                    description: |-
                        data is the actual set of datapoints, encoded according the the mime type. The data should follow the Feed's
                        value definitions but that is not enforced. (See also Value)
                    format: byte
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                mime:
                    description: mime is the mime type of the encoded data.
                    type: string
                occurredAt:
                    description: |-
                        occurredAt is the UTC timestamp of the sample. Typically this is either the time at which an application shared
                        this sample or the time applicable to the sample itself (such as an hourly weather observation).
                        (Optional: set to host time if not provided)
                    format: date-time
                    type: string
            type: object
        FeedID:
            description: A feed representation.
            example:
                hostId: hostId
                id: id
                twinId: twinId
            properties:
                hostId:
                    description: Host identifier string representation (simple string)
                        (Host to which the twin belongs)
                    type: string
                id:
                    description: Feed identifier string representation (simple string)
                        (unique within the scope of a twin identifier's feed set)
                    type: string
                twinId:
                    description: Twin identifier string representation (simple string)
                        (twin to which the feed belongs)
                    type: string
            type: object
        FeedMeta:
            description: Metadata message for this Feed.
            example:
                feedId:
                    hostId: hostId
                    id: id
                    twinId: twinId
                storeLast: true
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
                storeLast:
                    type: boolean
            type: object
        FetchInterestRequestArguments:
            description: FetchInterestRequest mandatory arguments.
            properties:
                interest:
                    $ref: '#/components/schemas/Interest'
            type: object
        FetchInterestResponse:
            description: FetchInterestResponse describes a feed value shared on a
                given interest.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/FetchInterestResponsePayload'
            type: object
        FetchInterestResponsePayload:
            description: FetchInterestResponse payload.
            properties:
                feedData:
                    $ref: '#/components/schemas/FeedData'
                interest:
                    $ref: '#/components/schemas/Interest'
            type: object
        FetchLastStoredRequestArguments:
            description: FetchLastStoredRequest mandatory arguments.
            properties:
                interest:
                    $ref: '#/components/schemas/Interest'
            type: object
        GeoCircle:
            description: GeoCircle is an approximate geographic location.
            properties:
                location:
                    $ref: '#/components/schemas/GeoLocation'
                radiusKm:
                    description: Radius (Km) relative to the geolocation
                    format: double
                    type: number
            type: object
        GeoLocation:
            description: GeoLocation is the geographic location of a Twin.
            example:
                lat: 6.027456183070403
                lon: 1.4658129805029452
            properties:
                lat:
                    description: Latitude
                    format: double
                    type: number
                lon:
                    description: Longitude
                    format: double
                    type: number
            type: object
        GeoLocationUpdate:
            description: GeoLocationUpdate describes the update of a twin location.
            properties:
                location:
                    $ref: '#/components/schemas/GeoLocation'
            type: object
        GetHostIDResponse:
            description: 'GetHostIDResponse: response containing the local host twin''s
                ID'
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/GetHostIDResponsePayload'
            type: object
        GetHostIDResponsePayload:
            properties:
                hostId:
                    type: string
            type: object
        Headers:
            description: |-
                Headers describes the common headers applicable to all the API requests
                (except for Search subscribe: see SubscriptionHeaders).
            example:
                clientAppId: clientAppId
                clientRef: clientRef
                consumerGroup: consumerGroup
                requestTimeout: '2000-01-23T04:56:07.000Z'
                transactionRef:
                - transactionRef
                - transactionRef
            properties:
                clientAppId:
                    description: User namespace used to group all the requests/responses
                    type: string
                clientRef:
                    description: Optional client reference. Any responses associated
                        with the request will include this reference.
                    type: string
                consumerGroup:
                    description: Used for group listener, optional - Not implemented
                        yet
                    type: string
                requestTimeout:
                    description: Client request timeout used to stop the request processing
                        once the timeout is reached
                    format: date-time
                    type: string
                transactionRef:
                    description: |-
                        Used to loosely link requests/responses in a distributed environment
                        each layer can add its own id to the list. Transaction ref is limited to
                        a max of 16 elements per list and, for each list item, a max length of 36
                        characters
                    items:
                        type: string
                    type: array
            type: object
        InputID:
            description: Representation of an input.
            example:
                hostId: hostId
                id: id
                twinId: twinId
            properties:
                hostId:
                    description: Host identifier string representation (simple string)
                        (Host to which the twin belongs)
                    type: string
                id:
                    description: Input Identifier string representation (simple string)
                        (unique within the scope of a twin identifier's input set)
                    type: string
                twinId:
                    description: Twin identifier string representation (simple string)
                        (twin to which the feed belongs)
                    type: string
            type: object
        InputInterest:
            description: An interest is the relationship between a Twin and an Input.
            properties:
                destInputId:
                    $ref: '#/components/schemas/InputID'
                senderTwinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        InputMessage:
            description: InputMessage describe a message that can be sent to an input
            properties:
                data:
                    description: |-
                        Data is the actual message, encoded according the the mime type. The data should follow the Input's
                        value definitions but that is not enforced. (See also Value)
                    format: byte
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                mime:
                    description: Mime is the mime type of the encoded data.
                    type: string
                occurredAt:
                    description: |-
                        OccurredAt is the UTC timestamp of the message.
                        Typically this is either the time at which an application sent this message
                        or the time applicable to the message itself. (Optional: set to host time if not provided)
                    format: date-time
                    type: string
            type: object
        InputMeta:
            description: Metadata message for this input.
            example:
                inputId:
                    hostId: hostId
                    id: id
                    twinId: twinId
            properties:
                inputId:
                    $ref: '#/components/schemas/InputID'
            type: object
        Interest:
            description: |-
                An interest is the relationship between a Twin and a Feed. For example, creating
                an interest on (following) a Feed results in any data shared on said Feed to be forwarded to
                the associated Twin. Interests can be revoked either by the subscriber or provider and there
                may only be one interest between any unique Twin and Feed combination.
            properties:
                followedFeedId:
                    $ref: '#/components/schemas/FeedID'
                followerTwinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        LangLiteral:
            description: 'LangLiteral is a metadata property type describing a string
                with a given language (implicit datatype: rdf:langString).'
            example:
                lang: lang
                value: value
            properties:
                lang:
                    description: 2-character language code
                    type: string
                value:
                    description: String representation of the value
                    type: string
            type: object
        Limit:
            description: Limit is a request parameter to limit the number of results.
            properties:
                value:
                    description: Max number of results (under configuration max limit
                        constraint)
                    format: int64
                    type: integer
            type: object
        ListAllFeedsRequest:
            description: ListAllFeedsRequest is used to list all the feeds owned by
                a given twin.
            properties:
                args:
                    $ref: '#/components/schemas/ListAllFeedsRequestArguments'
                headers:
                    $ref: '#/components/schemas/Headers'
                range:
                    $ref: '#/components/schemas/Range'
            type: object
        ListAllFeedsRequestArguments:
            description: ListAllFeedsRequest mandatory arguments.
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        ListAllFeedsResponse:
            description: ListAllFeedsResponse describes the list of the feeds owned
                by a twin.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    feedIds:
                    -   hostId: hostId
                        id: id
                        twinId: twinId
                    -   hostId: hostId
                        id: id
                        twinId: twinId
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/ListAllFeedsResponsePayload'
            type: object
        ListAllFeedsResponsePayload:
            description: ListAllFeedsResponse payload.
            example:
                feedIds:
                -   hostId: hostId
                    id: id
                    twinId: twinId
                -   hostId: hostId
                    id: id
                    twinId: twinId
            properties:
                feedIds:
                    description: List of the feeds owned by the twin
                    items:
                        $ref: '#/components/schemas/FeedID'
                    type: array
            type: object
        ListAllTwinsRequest:
            description: List all twins.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                range:
                    $ref: '#/components/schemas/Range'
            type: object
        ListAllTwinsResponse:
            description: |-
                Response of the list all twins request.
                Note this is useful for sync responses. In case there are too many twins (millions)
                this request may fail. Better opt for async behaviour via stomp/websocket.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    twins:
                    -   createdAt: '2000-01-23T04:56:07.000Z'
                        location:
                            lat: 0.8008281904610115
                            lon: 6.027456183070403
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        twinId:
                            hostId: hostId
                            id: id
                        updatedAt: '2000-01-23T04:56:07.000Z'
                    -   createdAt: '2000-01-23T04:56:07.000Z'
                        location:
                            lat: 0.8008281904610115
                            lon: 6.027456183070403
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        twinId:
                            hostId: hostId
                            id: id
                        updatedAt: '2000-01-23T04:56:07.000Z'
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/ListAllTwinsResponsePayload'
            type: object
        ListAllTwinsResponsePayload:
            description: Payload of listed twins.
            example:
                twins:
                -   createdAt: '2000-01-23T04:56:07.000Z'
                    location:
                        lat: 0.8008281904610115
                        lon: 6.027456183070403
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    twinId:
                        hostId: hostId
                        id: id
                    updatedAt: '2000-01-23T04:56:07.000Z'
                -   createdAt: '2000-01-23T04:56:07.000Z'
                    location:
                        lat: 0.8008281904610115
                        lon: 6.027456183070403
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    twinId:
                        hostId: hostId
                        id: id
                    updatedAt: '2000-01-23T04:56:07.000Z'
            properties:
                twins:
                    items:
                        $ref: '#/components/schemas/ListAllTwinsResponseTwinDetails'
                    type: array
            type: object
        ListAllTwinsResponseTwinDetails:
            description: ListAllTwinsResponse twin details.
            example:
                createdAt: '2000-01-23T04:56:07.000Z'
                location:
                    lat: 0.8008281904610115
                    lon: 6.027456183070403
                properties:
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                twinId:
                    hostId: hostId
                    id: id
                updatedAt: '2000-01-23T04:56:07.000Z'
            properties:
                createdAt:
                    description: Twin createdAt timestamp.
                    format: date-time
                    type: string
                location:
                    $ref: '#/components/schemas/GeoLocation'
                properties:
                    description: Twin custom properties.
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                twinId:
                    $ref: '#/components/schemas/TwinID'
                updatedAt:
                    description: Twin updatedAt timestamp.
                    format: date-time
                    type: string
                visibility:
                    $ref: '#/components/schemas/Visibility'
            type: object
        Literal:
            description: 'Literal is a metadata property type describing a literal
                with the given datatype (implicit datatype: rdfs:Literal).'
            example:
                dataType: dataType
                value: value
            properties:
                dataType:
                    description: |-
                        XSD data type (e.g. double) without its namespace prefix (http://www.w3.org/2001/XMLSchema#). The following types
                        are currently supported:
                        dateTime, time, date, boolean, integer, decimal, float, double, nonPositiveInteger, negativeInteger,
                        nonNegativeInteger, positiveInteger, long, unsignedLong, int, unsignedInt, short, unsignedShort, byte,
                        unsignedByte, base64Binary, anyURI
                    type: string
                value:
                    description: String representation of the value according to XSD
                        datatype specification
                    type: string
            type: object
        Offset:
            description: |-
                Offset is a request parameter applicable in conjunction with the "Limit"
                request parameter to start returning results from the given offset.
            properties:
                value:
                    description: Result number to start from
                    format: int64
                    type: integer
            type: object
        PayloadFilter:
            description: Search request filters, any of these can be used in combination
                or on their own.
            properties:
                location:
                    $ref: '#/components/schemas/GeoCircle'
                properties:
                    description: 'Properties filtering: one or more exact properties,
                        all of which twins must have.'
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                text:
                    description: |-
                        Text filtering. One or more keywords which must match text from twin properties. Note that any (rather than all)
                        of the keywords will produce a match.
                    type: string
            type: object
        Property:
            description: |-
                Property is a metadata property with a single value.
                Multiple instances are used to represent a key (predicate) with multiple values.
            example:
                key: key
                langLiteralValue:
                    lang: lang
                    value: value
                literalValue:
                    dataType: dataType
                    value: value
                stringLiteralValue:
                    value: value
                uriValue:
                    value: value
            properties:
                key:
                    description: The key (predicate) of the property
                    type: string
                langLiteralValue:
                    $ref: '#/components/schemas/LangLiteral'
                literalValue:
                    $ref: '#/components/schemas/Literal'
                stringLiteralValue:
                    $ref: '#/components/schemas/StringLiteral'
                uriValue:
                    $ref: '#/components/schemas/Uri'
            type: object
        PropertyUpdate:
            description: |-
                PropertyUpdate describes the update of a twin properties.
                Can be used to add, replace, or delete properties. The order of operations is:
                clearedAll (if True), deleted, deletedByKey, added.
                Note that internal properties (such as location) cannot be modified here.
            properties:
                added:
                    description: Adds the given properties
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                clearedAll:
                    description: Delete all properties currently set on the twin.
                    type: boolean
                deleted:
                    description: Delete specific exact properties (by key and value).
                        This operation is ignored if clearAll is True.
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                deletedByKey:
                    description: Delete any properties with the given keys (predicates).
                        This operation is ignored if clearAll is True.
                    items:
                        type: string
                    type: array
            type: object
        Range:
            description: |-
                Range is the combination of the "Limit" and "Offset" is a request parameters. It is
                used to return a specific range of results. Default value is applied if no limit is specified.
            properties:
                limit:
                    $ref: '#/components/schemas/Limit'
                offset:
                    $ref: '#/components/schemas/Offset'
            type: object
        ReceiveInputMessageRequestArguments:
            description: ReceiveInputMessageRequest arguments.
            properties:
                inputId:
                    $ref: '#/components/schemas/InputID'
            type: object
        ReceiveInputMessageResponse:
            description: ReceiveInputMessageResponse contains a message sent to the
                Input.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/ReceiveInputMessageResponsePayload'
            type: object
        ReceiveInputMessageResponsePayload:
            properties:
                inputId:
                    $ref: '#/components/schemas/InputID'
                message:
                    $ref: '#/components/schemas/InputMessage'
            type: object
        ResponseType:
            default: FULL
            description: |-
                ResponseType describes the type of the search response.
                - FULL - Returns full responses including twins and feeds identifiers, labels/comments (for all languages if no language provided), properties and location
                - LOCATED - Returns located responses including twins identifier, location and label (for the provided language or default)
                - MINIMAL - Returns minimal responses including twins identifier only
            enum:
            - FULL
            - LOCATED
            - MINIMAL
            type: string
        Scope:
            default: GLOBAL
            description: |-
                Scope is a request parameter used to apply a scope to a given request.
                GLOBAL - go over the network/target the public Twin
                LOCAL - restrain the request to the local host
            enum:
            - GLOBAL
            - LOCAL
            type: string
        SearchRequest:
            description: SearchRequest describes a search request used for both synchronous
                and asynchronous search.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                lang:
                    description: Search request language, applicable to text filtering.
                        If not specified, text search will match any language.
                    type: string
                payload:
                    $ref: '#/components/schemas/SearchRequestPayload'
                range:
                    $ref: '#/components/schemas/Range'
                scope:
                    $ref: '#/components/schemas/Scope'
            type: object
        SearchRequestPayload:
            description: Search request payload.
            properties:
                expiryTimeout:
                    description: UTC time (millis from epoch / unix time) when this
                        search request has to be considered expired.
                    format: date-time
                    type: string
                filter:
                    $ref: '#/components/schemas/PayloadFilter'
                responseType:
                    $ref: '#/components/schemas/ResponseType'
            type: object
        SearchResponse:
            description: |-
                SearchResponse describes a result associated to a search request.
                It contains all the matching twins/feeds according to the request scope/range/lang/filters in the expected response type format.
                In the decentralised iotics operating environment, each node in the network generates a response and the client is expected to
                receive a stream of response messages.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    hostId: hostId
                    status:
                        code: 0
                        details:
                        -   typeUrl: typeUrl
                            value: value
                        -   typeUrl: typeUrl
                            value: value
                        message: message
                    twins:
                    -   createdAt: '2000-01-23T04:56:07.000Z'
                        feeds:
                        -   feedId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            storeLast: true
                        -   feedId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            storeLast: true
                        inputs:
                        -   inputId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                        -   inputId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                        location:
                            lat: 6.027456183070403
                            lon: 1.4658129805029452
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        twinId:
                            hostId: hostId
                            id: id
                        updatedAt: '2000-01-23T04:56:07.000Z'
                    -   createdAt: '2000-01-23T04:56:07.000Z'
                        feeds:
                        -   feedId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            storeLast: true
                        -   feedId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            storeLast: true
                        inputs:
                        -   inputId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                        -   inputId:
                                hostId: hostId
                                id: id
                                twinId: twinId
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                        location:
                            lat: 6.027456183070403
                            lon: 1.4658129805029452
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        twinId:
                            hostId: hostId
                            id: id
                        updatedAt: '2000-01-23T04:56:07.000Z'
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/SearchResponsePayload'
            type: object
        SearchResponseFeedDetails:
            description: 'Search response feed details. Included with response type:
                FULL.'
            example:
                feedId:
                    hostId: hostId
                    id: id
                    twinId: twinId
                properties:
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                storeLast: true
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
                properties:
                    description: Feed custom properties.
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                storeLast:
                    description: whether offers the ability to store last received
                        value
                    type: boolean
            type: object
        SearchResponseInputDetails:
            description: 'Search response input details. Included with response type:
                FULL.'
            example:
                inputId:
                    hostId: hostId
                    id: id
                    twinId: twinId
                properties:
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
            properties:
                inputId:
                    $ref: '#/components/schemas/InputID'
                properties:
                    description: Input custom properties.
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
            type: object
        SearchResponsePayload:
            description: Search Response Payload.
            example:
                hostId: hostId
                status:
                    code: 0
                    details:
                    -   typeUrl: typeUrl
                        value: value
                    -   typeUrl: typeUrl
                        value: value
                    message: message
                twins:
                -   createdAt: '2000-01-23T04:56:07.000Z'
                    feeds:
                    -   feedId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        storeLast: true
                    -   feedId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        storeLast: true
                    inputs:
                    -   inputId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                    -   inputId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                    location:
                        lat: 6.027456183070403
                        lon: 1.4658129805029452
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    twinId:
                        hostId: hostId
                        id: id
                    updatedAt: '2000-01-23T04:56:07.000Z'
                -   createdAt: '2000-01-23T04:56:07.000Z'
                    feeds:
                    -   feedId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        storeLast: true
                    -   feedId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        storeLast: true
                    inputs:
                    -   inputId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                    -   inputId:
                            hostId: hostId
                            id: id
                            twinId: twinId
                        properties:
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                        -   key: key
                            langLiteralValue:
                                lang: lang
                                value: value
                            literalValue:
                                dataType: dataType
                                value: value
                            stringLiteralValue:
                                value: value
                            uriValue:
                                value: value
                    location:
                        lat: 6.027456183070403
                        lon: 1.4658129805029452
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    twinId:
                        hostId: hostId
                        id: id
                    updatedAt: '2000-01-23T04:56:07.000Z'
            properties:
                hostId:
                    description: Host identifier string representation
                    type: string
                responseType:
                    $ref: '#/components/schemas/ResponseType'
                status:
                    $ref: '#/components/schemas/rpcStatus'
                twins:
                    description: Matching twins
                    items:
                        $ref: '#/components/schemas/SearchResponseTwinDetails'
                    type: array
            type: object
        SearchResponseTwinDetails:
            description: Search response twin details.
            example:
                createdAt: '2000-01-23T04:56:07.000Z'
                feeds:
                -   feedId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    storeLast: true
                -   feedId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    storeLast: true
                inputs:
                -   inputId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                -   inputId:
                        hostId: hostId
                        id: id
                        twinId: twinId
                    properties:
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                    -   key: key
                        langLiteralValue:
                            lang: lang
                            value: value
                        literalValue:
                            dataType: dataType
                            value: value
                        stringLiteralValue:
                            value: value
                        uriValue:
                            value: value
                location:
                    lat: 6.027456183070403
                    lon: 1.4658129805029452
                properties:
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                -   key: key
                    langLiteralValue:
                        lang: lang
                        value: value
                    literalValue:
                        dataType: dataType
                        value: value
                    stringLiteralValue:
                        value: value
                    uriValue:
                        value: value
                twinId:
                    hostId: hostId
                    id: id
                updatedAt: '2000-01-23T04:56:07.000Z'
            properties:
                createdAt:
                    description: Twin createdAt timestamp.
                    format: date-time
                    type: string
                feeds:
                    description: 'Feed details. Included with response type: FULL'
                    items:
                        $ref: '#/components/schemas/SearchResponseFeedDetails'
                    type: array
                inputs:
                    description: 'Input details. Included with response type: FULL'
                    items:
                        $ref: '#/components/schemas/SearchResponseInputDetails'
                    type: array
                location:
                    $ref: '#/components/schemas/GeoLocation'
                properties:
                    description: Twin custom properties.
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                twinId:
                    $ref: '#/components/schemas/TwinID'
                updatedAt:
                    description: Twin updatedAt timestamp.
                    format: date-time
                    type: string
                visibility:
                    $ref: '#/components/schemas/Visibility'
            type: object
        SendInputMessageRequestArguments:
            description: SendInputMessageRequest arguments.
            properties:
                interest:
                    $ref: '#/components/schemas/InputInterest'
            type: object
        SendInputMessageRequestPayload:
            description: SendInputMessageRequest payload.
            properties:
                message:
                    $ref: '#/components/schemas/InputMessage'
            type: object
        SendInputMessageResponse:
            description: SendInputMessageResponse is used to indicate a successful
                send.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
            type: object
        ShareFeedDataRequestArguments:
            description: ShareFeedDataRequest arguments.
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
            type: object
        ShareFeedDataRequestPayload:
            description: ShareFeedDataRequest payload.
            properties:
                sample:
                    $ref: '#/components/schemas/FeedData'
            type: object
        ShareFeedDataResponse:
            description: ShareFeedDataResponse is used to indicate a successful feed
                share.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
            type: object
        SparqlQueryRequestPayload:
            description: SPARQL query request payload.
            properties:
                query:
                    description: A UTF8-encoded SPARQL 1.1 query
                    format: byte
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                resultContentType:
                    $ref: '#/components/schemas/SparqlResultType'
            type: object
        SparqlQueryResponse:
            description: |-
                SparqlQueryResponse is a part of a result for a SPARQL query request. Multiple chunks form a complete result. Related
                chunks can be identified by a combination of:
                - The hostId
                - Client reference (in headers, set by caller)
                - Chunk sequence number
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/SparqlQueryResponsePayload'
            type: object
        SparqlQueryResponsePayload:
            description: Payload of the query result chunk
            properties:
                contentType:
                    $ref: '#/components/schemas/SparqlResultType'
                hostId:
                    description: |-
                        Result host identifier. Indicates from which host this result chunk came from. For a local result, this field
                        will be unset.
                    type: string
                last:
                    description: |-
                        Indicates whether this is the last chunk from a given host, for a specific request. Results for different
                        requests can be identified by setting a unique clientRef in the request headers.
                    type: boolean
                resultChunk:
                    description: |-
                        Query result chunk, encoded according to actualType.
                        Note that:
                        - The maximum size of each chunk is host-specific.
                    format: byte
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                seqNum:
                    description: Position of a chunk in result from a given host (and
                        request). The first chunk has a sequence number of 0.
                    format: uint64
                    type: string
                status:
                    $ref: '#/components/schemas/rpcStatus'
            type: object
        SparqlResultType:
            default: SPARQL_JSON
            description: |-
                SparqlResultType defines the result content types for SPARQL requests. Note that applicable content types depend on
                the type of query.

                 - SPARQL_JSON: Applicable to SELECT/ASK (SPARQL 1.1 Query Results JSON Format)
                 - SPARQL_XML: Applicable to SELECT/ASK (SPARQL 1.1 Query Results XML Format)
                 - SPARQL_CSV: Applicable to SELECT/ASK (SPARQL 1.1. Query Results CSV Format)
                 - RDF_TURTLE: Applicable to CONSTRUCT/DESCRIBE (Terse RDF Triple Language)
                 - RDF_XML: Applicable to CONSTRUCT/DESCRIBE (RDF 1.1 XML)
                 - RDF_NTRIPLES: Applicable to CONSTRUCT/DESCRIBE (RDF 1.1 N-Triples)
            enum:
            - SPARQL_JSON
            - SPARQL_XML
            - SPARQL_CSV
            - RDF_TURTLE
            - RDF_XML
            - RDF_NTRIPLES
            type: string
        SparqlUpdateRequestPayload:
            description: SPARQL update request payload.
            properties:
                update:
                    description: A UTF8-encoded SPARQL 1.1 update
                    format: byte
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
            type: object
        SparqlUpdateResponse:
            description: Response of the SPARQL update request.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
            type: object
        Stream_result_of_apiSearchResponse:
            description: Stream result of apiSearchResponse
            example:
                error:
                    code: 0
                    details:
                    -   typeUrl: typeUrl
                        value: value
                    -   typeUrl: typeUrl
                        value: value
                    message: message
                result:
                    headers:
                        clientAppId: clientAppId
                        clientRef: clientRef
                        consumerGroup: consumerGroup
                        requestTimeout: '2000-01-23T04:56:07.000Z'
                        transactionRef:
                        - transactionRef
                        - transactionRef
                    payload:
                        hostId: hostId
                        status:
                            code: 0
                            details:
                            -   typeUrl: typeUrl
                                value: value
                            -   typeUrl: typeUrl
                                value: value
                            message: message
                        twins:
                        -   createdAt: '2000-01-23T04:56:07.000Z'
                            feeds:
                            -   feedId:
                                    hostId: hostId
                                    id: id
                                    twinId: twinId
                                properties:
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                storeLast: true
                            -   feedId:
                                    hostId: hostId
                                    id: id
                                    twinId: twinId
                                properties:
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                storeLast: true
                            inputs:
                            -   inputId:
                                    hostId: hostId
                                    id: id
                                    twinId: twinId
                                properties:
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                            -   inputId:
                                    hostId: hostId
                                    id: id
                                    twinId: twinId
                                properties:
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                            location:
                                lat: 6.027456183070403
                                lon: 1.4658129805029452
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            twinId:
                                hostId: hostId
                                id: id
                            updatedAt: '2000-01-23T04:56:07.000Z'
                        -   createdAt: '2000-01-23T04:56:07.000Z'
                            feeds:
                            -   feedId:
                                    hostId: hostId
                                    id: id
                                    twinId: twinId
                                properties:
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                storeLast: true
                            -   feedId:
                                    hostId: hostId
                                    id: id
                                    twinId: twinId
                                properties:
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                storeLast: true
                            inputs:
                            -   inputId:
                                    hostId: hostId
                                    id: id
                                    twinId: twinId
                                properties:
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                            -   inputId:
                                    hostId: hostId
                                    id: id
                                    twinId: twinId
                                properties:
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                                -   key: key
                                    langLiteralValue:
                                        lang: lang
                                        value: value
                                    literalValue:
                                        dataType: dataType
                                        value: value
                                    stringLiteralValue:
                                        value: value
                                    uriValue:
                                        value: value
                            location:
                                lat: 6.027456183070403
                                lon: 1.4658129805029452
                            properties:
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            -   key: key
                                langLiteralValue:
                                    lang: lang
                                    value: value
                                literalValue:
                                    dataType: dataType
                                    value: value
                                stringLiteralValue:
                                    value: value
                                uriValue:
                                    value: value
                            twinId:
                                hostId: hostId
                                id: id
                            updatedAt: '2000-01-23T04:56:07.000Z'
            properties:
                error:
                    $ref: '#/components/schemas/rpcStatus'
                result:
                    $ref: '#/components/schemas/SearchResponse'
            type: object
        StringLiteral:
            description: 'StringLiteral is a metadata property type describing a string
                without a language (implicit datatype: rdf:string).'
            example:
                value: value
            properties:
                value:
                    description: String representation of the value
                    type: string
            type: object
        TwinID:
            description: |-
                TwinID is the virtual representation of a (physical, purely virtual or hybrid) device,
                is only ever located in the host it was created.
            example:
                hostId: hostId
                id: id
            properties:
                hostId:
                    description: Host Identifier (using DID format)
                    type: string
                id:
                    description: Twin Identifier (using DID format)
                    type: string
            type: object
        UpdateFeedRequest:
            description: UpdateFeedRequest is used to update attributes (including
                metadata) of a given feed.
            properties:
                args:
                    $ref: '#/components/schemas/UpdateFeedRequestArguments'
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/UpdateFeedRequestPayload'
            type: object
        UpdateFeedRequestArguments:
            description: UpdateFeedRequest arguments.
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
            type: object
        UpdateFeedRequestPayload:
            description: |-
                UpdateFeedRequest payload. One or more fields can be provided, depending on what needs to be updated.
                Note that the specified metadata changes are applied in the following order:
                tags, values, labels, comments
            properties:
                properties:
                    $ref: '#/components/schemas/PropertyUpdate'
                storeLast:
                    description: StoreLast dictates whether to store the last shared
                        sample of a feed.
                    type: boolean
                values:
                    $ref: '#/components/schemas/Values'
            type: object
        UpdateFeedResponse:
            description: UpdateFeedResponse is used to indicate a successful update.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    feedId:
                        hostId: hostId
                        id: id
                        twinId: twinId
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/UpdateFeedResponsePayload'
            type: object
        UpdateFeedResponsePayload:
            description: UpdateFeedResponse payload.
            example:
                feedId:
                    hostId: hostId
                    id: id
                    twinId: twinId
            properties:
                feedId:
                    $ref: '#/components/schemas/FeedID'
            type: object
        UpdateTwinRequest:
            description: UpdateTwinRequest is used to update attributes (including
                metadata) of a given twin.
            properties:
                args:
                    $ref: '#/components/schemas/UpdateTwinRequestArguments'
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/UpdateTwinRequestPayload'
            type: object
        UpdateTwinRequestArguments:
            description: UpdateTwinRequest mandatory arguments.
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        UpdateTwinRequestPayload:
            description: |-
                UpdateTwinRequest payload. One or more fields can be provided, depending on what needs to be updated.
                Note that the specified metadata changes are applied in the following order:
                tags, visibility, properties, labels, comments, location
            properties:
                location:
                    $ref: '#/components/schemas/GeoLocationUpdate'
                newVisibility:
                    $ref: '#/components/schemas/VisibilityUpdate'
                properties:
                    $ref: '#/components/schemas/PropertyUpdate'
            type: object
        UpdateTwinResponse:
            description: UpdateTwinResponse describes an updated twin. It is received
                when the update operation is successful.
            example:
                headers:
                    clientAppId: clientAppId
                    clientRef: clientRef
                    consumerGroup: consumerGroup
                    requestTimeout: '2000-01-23T04:56:07.000Z'
                    transactionRef:
                    - transactionRef
                    - transactionRef
                payload:
                    twinId:
                        hostId: hostId
                        id: id
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/UpdateTwinResponsePayload'
            type: object
        UpdateTwinResponsePayload:
            description: UpdateTwinResponse payload.
            example:
                twinId:
                    hostId: hostId
                    id: id
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        UpsertFeedWithMeta:
            description: UpsertFeedWithMeta is used to describe the full feed state.
                Used in UpsertTwinRequest.
            properties:
                id:
                    description: Feed identifier string representation (simple string)
                        (unique within the scope of a twin identifier's feed set)
                    type: string
                properties:
                    description: Feed properties to set
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                storeLast:
                    description: StoreLast dictates whether to store the last shared
                        sample of the feed. Default 'False'
                    type: boolean
                values:
                    description: Values to set
                    items:
                        $ref: '#/components/schemas/Value'
                    type: array
            type: object
        UpsertInputWithMeta:
            description: UpsertInputWithMeta is used to describe the full input state.
                Used in UpsertTwinRequest.
            properties:
                id:
                    description: Input Identifier string representation (simple string)
                        (unique within the scope of a twin identifier's input set)
                    type: string
                properties:
                    description: Properties to set
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                values:
                    description: Values to set
                    items:
                        $ref: '#/components/schemas/Value'
                    type: array
            type: object
        UpsertTwinRequestPayload:
            description: UpsertTwinRequest payload. This state will be applied to
                the twin/feeds
            properties:
                feeds:
                    description: Feeds with metadata to set for the twin
                    items:
                        $ref: '#/components/schemas/UpsertFeedWithMeta'
                    type: array
                inputs:
                    description: Inputs with metadata to set for the twin
                    items:
                        $ref: '#/components/schemas/UpsertInputWithMeta'
                    type: array
                location:
                    $ref: '#/components/schemas/GeoLocation'
                properties:
                    description: Twin Properties to set
                    items:
                        $ref: '#/components/schemas/Property'
                    type: array
                twinId:
                    $ref: '#/components/schemas/TwinID'
                visibility:
                    $ref: '#/components/schemas/Visibility'
            type: object
        UpsertTwinResponse:
            description: UpsertTwinResponse is received when a twin and its feeds
                have been created/updated.
            properties:
                headers:
                    $ref: '#/components/schemas/Headers'
                payload:
                    $ref: '#/components/schemas/UpsertTwinResponsePayload'
            type: object
        UpsertTwinResponsePayload:
            description: Payload identifies the twin which was created.
            properties:
                twinId:
                    $ref: '#/components/schemas/TwinID'
            type: object
        Uri:
            description: Uri is a metadata property type describing am Uri.
            example:
                value: value
            properties:
                value:
                    description: String representation of the value
                    type: string
            type: object
        Value:
            description: |-
                Value is the definition of an individual piece of data within a Feed share or an Input send. Values are purely descriptive, e.g. a
                follower should expect data to match the values associated with said Feed/Input but must be able to recover where this
                is not the case.
            properties:
                comment:
                    description: 'comment is the (optional) human-readable description
                        of the value. It is language-specific. E.g.: "Engine oil temperature"'
                    type: string
                dataType:
                    description: |-
                        dataType is the xsd type in shorthand notation.
                        Currently supported types are: base64Binary, decimal, float, double, dateTime, time, date, boolean, integer,
                        nonPositiveInteger, negativeInteger, nonNegativeInteger, positiveInteger, long, unsignedLong, int, unsignedInt,
                        short, unsignedShort, byte, unsignedByte
                    type: string
                label:
                    description: 'label is the unique identifier of the value. It
                        is language-neutral. E.g.: "t" / "temp" / "temperature".'
                    type: string
                unit:
                    description: unit is the (optional) fully qualified ontology string
                        URI of the unit, e.g. http://purl.obolibrary.org/obo/UO_0000027
                    type: string
            type: object
        Values:
            description: Values defines a set of values to be added and/or deleted.
            properties:
                added:
                    description: |-
                        added is the list of values to be added. Note that deletedByLabel takes precedence over this, i.e. if both added
                        and deletedByLabel contain the same value, the value will be deleted.
                    items:
                        $ref: '#/components/schemas/Value'
                    type: array
                deletedByLabel:
                    description: deletedByLabel is the list of labels of values to
                        be deleted.
                    items:
                        type: string
                    type: array
            type: object
        Visibility:
            default: PRIVATE
            description: |-
                DEPRECATED
                This field will be temporarily maintained alongside the metadata network allowlist for backwards compatibility.
                Going forward, the metadata network allowlist should be used instead.

                Read behaviour:
                PRIVATE - the twin is only visible in a LOCAL scope or according to the metadata network allowlist
                PUBLIC - the twin is visible in any scope. (ie. metadata network allowlist [ALLOW_ALL])

                Write behaviour:
                PRIVATE - set the metadata network allowlist to ALLOW_NONE: the twin is only visible in a LOCAL scope
                PUBLIC - set the metadata network allowlist to ALLOW_ALL: the twin is visible in any scope.
            enum:
            - PRIVATE
            - PUBLIC
            type: string
        VisibilityUpdate:
            description: DEPRECATED - see Visibility field description for details.
            properties:
                visibility:
                    $ref: '#/components/schemas/Visibility'
            type: object
        bufAny:
            description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            example:
                typeUrl: typeUrl
                value: value
            properties:
                typeUrl:
                    description: |-
                        A URL/resource name that uniquely identifies the type of the serialized
                        protocol buffer message. This string must contain at least
                        one "/" character. The last segment of the URL's path must represent
                        the fully qualified name of the type (as in
                        `path/google.protobuf.Duration`). The name should be in a canonical form
                        (e.g., leading "." is not accepted).

                        In practice, teams usually precompile into the binary all types that they
                        expect it to use in the context of Any. However, for URLs which use the
                        scheme `http`, `https`, or no scheme, one can optionally set up a type
                        server that maps type URLs to message definitions as follows:

                        * If no scheme is provided, `https` is assumed.
                        * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in the official
                        protobuf release, and it is not used for type URLs beginning with
                        type.googleapis.com.

                        Schemes other than `http`, `https` (or the empty scheme) might be
                        used with implementation specific semantics.
                    type: string
                value:
                    type: object
            type: object
        rpcStatus:
            description: |-
                The `Status` type defines a logical error model that is suitable for
                different programming environments, including REST APIs and RPC APIs. It is
                used by [gRPC](https://github.com/grpc). Each `Status` message contains
                three pieces of data: error code, error message, and error details.

                You can find out more about this error model and how to work with it in the
                [API Design Guide](https://cloud.google.com/apis/design/errors).
            example:
                code: 0
                details:
                -   typeUrl: typeUrl
                    value: value
                -   typeUrl: typeUrl
                    value: value
                message: message
            properties:
                code:
                    description: The status code, which should be an enum value of
                        [google.rpc.Code][google.rpc.Code].
                    format: int32
                    type: integer
                details:
                    description: |-
                        A list of messages that carry the error details.  There is a common set of
                        message types for APIs to use.
                    items:
                        $ref: '#/components/schemas/bufAny'
                    type: array
                message:
                    description: |-
                        A developer-facing error message, which should be in English. Any
                        user-facing error message should be localized and sent in the
                        [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                    type: string
            type: object
        runtimeError:
            $ref: '#/components/schemas/rpcStatus'
    securitySchemes:
        jwt:
            bearerFormat: JWT
            scheme: bearer
            type: http
info:
    contact:
        name: Documentation
        url: https://docs.iotics.com/
    license:
        name: License
        url: https://github.com/Iotic-Labs/api/blob/main/LICENSE
    title: IOTICS WebAPI
    version: '1.0'
openapi: 3.0.1
paths:
    /host/id:
        get:
            description: Get Host ID.
            operationId: GetHostID
            parameters:
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHostIDResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Get Host ID.
            tags:
            - Host
            x-codegen-request-body-name: body
    ? /hosts/{followerHostId}/twins/{followerTwinId}/interests/hosts/{followedHostId}/twins/{followedTwinId}/feeds/{followedFeedId}/samples/last
    :   get:
            description: Fetch last data shared on this interest if `storeLast` is
                enable on the followedFeed
            operationId: FetchLastStored
            parameters:
            -   description: ID of the twin owning the followed feed host
                in: path
                name: followedHostId
                required: true
                schema:
                    type: string
            -   description: ID of the follower twin
                in: path
                name: followerTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the follower twin host
                in: path
                name: followerHostId
                required: true
                schema:
                    type: string
            -   description: ID of the twin owning the followed feed
                in: path
                name: followedTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the followed feed
                in: path
                name: followedFeedId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FetchInterestResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Fetch last shared.
            tags:
            - Interest
            x-codegen-request-body-name: body
    /hosts/{followerHostId}/twins/{followerTwinId}/interests/twins/{followedTwinId}/feeds/{followedFeedId}/samples/last:
        get:
            description: Fetch last data shared on this interest if `storeLast` is
                enable on the followedFeed.
            operationId: FetchLastStoredToLocal
            parameters:
            -   description: ID of the follower twin
                in: path
                name: followerTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the follower twin host
                in: path
                name: followerHostId
                required: true
                schema:
                    type: string
            -   description: ID of the twin owning the followed feed
                in: path
                name: followedTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the followed feed
                in: path
                name: followedFeedId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FetchInterestResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Fetch last shared.
            tags:
            - LocalFollowerInterest
            x-codegen-request-body-name: body
    /hosts/{hostId}/twins/{twinId}:
        delete:
            description: |-
                Delete a local twin with the provided ID.

                The delete is idempotent. It will not fail if the twin does not exist.
            operationId: DeleteTwin
            parameters:
            -   description: ID of the twin to delete
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTwinResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Delete a local twin.
            tags:
            - Twin
            x-codegen-request-body-name: body
        get:
            description: Describe a twin.
            operationId: DescribeTwin
            parameters:
            -   description: ID of the twin to describe
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DescribeTwinResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Describe a twin.
            tags:
            - Twin
            x-codegen-request-body-name: body
        patch:
            description: |-
                Udapte a local twin.

                The update can be partial: it is possible to patch only a sub-part of the twin representation.
            operationId: UpdateTwin
            parameters:
            -   description: ID of the twin to update
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTwinRequestPayload'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTwinResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Update a local twin.
            tags:
            - Twin
            x-codegen-request-body-name: body
    /hosts/{hostId}/twins/{twinId}/feeds:
        get:
            description: List all feeds owned by the provided local twin.
            operationId: ListAllFeeds
            parameters:
            -   description: ID of the twin providing the feeds
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAllFeedsResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: List all feeds.
            tags:
            - Feed
            x-codegen-request-body-name: body
        post:
            description: |-
                Create a feed owned by the provided local twin.
                The create is idempotent. It will not fail if the feed already exists.
            operationId: CreateFeed
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFeedRequestPayload'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFeedResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Create a Feed.
            tags:
            - Feed
            x-codegen-request-body-name: body
    /hosts/{hostId}/twins/{twinId}/feeds/{feedId}:
        delete:
            description: |-
                Delete a feed owned by the provided local twin.

                The delete is idempotent. It will not fail if the feed does not exist.
            operationId: DeleteFeed
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the feed
                in: path
                name: feedId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteFeedResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Delete a Feed.
            tags:
            - Feed
            x-codegen-request-body-name: body
        get:
            description: Describe a feed owned by the provided twin.
            operationId: DescribeFeed
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the feed to describe
                in: path
                name: feedId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DescribeFeedResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Describe a feed.
            tags:
            - Feed
            x-codegen-request-body-name: body
        patch:
            description: Update the semantic description and values of a feed owned
                by the provided local twin.
            operationId: UpdateFeed
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the feed
                in: path
                name: feedId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateFeedRequestPayload'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateFeedResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Update a feed.
            tags:
            - Feed
            x-codegen-request-body-name: body
    /hosts/{hostId}/twins/{twinId}/feeds/{feedId}/shares:
        post:
            description: |-
                Share a new sample of data for the given feed owned by the provided local twin.
                Any (interest) subscribers can receive it.
            operationId: ShareFeedData
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the feed
                in: path
                name: feedId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ShareFeedDataRequestPayload'
                required: true
            responses:
                '202':
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Share a new sample of data which any (interest) subscribers can
                receive.
            tags:
            - Feed
            x-codegen-request-body-name: body
    /hosts/{hostId}/twins/{twinId}/inputs/{inputId}:
        delete:
            description: |-
                Delete an input owned by the provided local twin.

                The delete is idempotent. It will not fail if the input does not exist.
            operationId: DeleteInput
            parameters:
            -   description: ID of the twin providing the input
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the input
                in: path
                name: inputId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteInputResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Delete an Input.
            tags:
            - Input
            x-codegen-request-body-name: body
        get:
            description: Describe an input owned by the provided twin.
            operationId: DescribeInput
            parameters:
            -   description: ID of the twin providing the input
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the input to describe
                in: path
                name: inputId
                required: true
                schema:
                    type: string
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DescribeInputResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Describe an input.
            tags:
            - Input
            x-codegen-request-body-name: body
    /hosts/{senderHostId}/twins/{senderTwinId}/interests/hosts/{hostId}/twins/{twinId}/inputs/{inputId}/messages:
        post:
            description: Send an input message from a sender twin to a receiver twin/input.
            operationId: SendInputMessage
            parameters:
            -   description: ID of the twin sending the input message
                in: path
                name: senderTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the twin providing the input host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   description: ID of the twin sending the input message host
                in: path
                name: senderHostId
                required: true
                schema:
                    type: string
            -   description: ID of the twin providing the input
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the input
                in: path
                name: inputId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendInputMessageRequestPayload'
                required: true
            responses:
                '202':
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Send a message to an input.
            tags:
            - Interest
            x-codegen-request-body-name: body
    /hosts/{senderHostId}/twins/{senderTwinId}/interests/twins/{twinId}/inputs/{inputId}/messages:
        post:
            description: Send an input message from a sender twin to a receiver twin/input.
            operationId: SendInputMessageToLocal
            parameters:
            -   description: ID of the twin sending the input message
                in: path
                name: senderTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the twin sending the input message host
                in: path
                name: senderHostId
                required: true
                schema:
                    type: string
            -   description: ID of the twin providing the input
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the input
                in: path
                name: inputId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendInputMessageRequestPayload'
                required: true
            responses:
                '202':
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Send a message to an input.
            tags:
            - LocalFollowerInterest
            x-codegen-request-body-name: body
    /searches:
        post:
            description: |-
                Run a synschronous **GLOBAL** or **LOCAL** search according to the provided user timeout.
                Each time a result is available it will be returned as a chunk. The last chunk is always a timemout error.
                ```python
                import requests
                [...]
                with requests.post('http://localhost:8081/searches'), stream=True, headers=headers,
                                   params={'scope': CommonScope.LOCAL}, json=request, verify=False) as resp:
                    resp.raise_for_status()
                    for chunk in resp.iter_lines():
                        print(json.loads(chunk))

                **Output**:
                {'result': {'headers': {'clientAppId': 'app1', 'transactionRef': ['txref-1'], 'requestTimeout': '2021-01-26T08:49:49.835818Z', [...]},
                            'payload': {'entities': [{'id': {'value': 'did:iotics:iotJsc2kDNWzF8Z73VbyTNp5M9jttEKAjY56'}, [...] }
                {'error': {'grpc_code': 4, 'http_code': 504, 'http_status': 'GATEWAY_TIMEOUT',
                           'message': 'Request timeout reached, remaining responses available over STOMP subscription'}}

                ```
            operationId: Search
            parameters:
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            -   $ref: '#/components/parameters/requestTimeout'
            -   $ref: '#/components/parameters/lang'
            -   $ref: '#/components/parameters/scope'
            -   $ref: '#/components/parameters/limit'
            -   $ref: '#/components/parameters/offset'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchRequestPayload'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Stream_result_of_apiSearchResponse'
                    description: A successful response.(streaming responses)
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Run a synchronous search based on a user timeout.
            tags:
            - Search
            x-codegen-request-body-name: body
    /twins:
        get:
            description: List all the local twins.
            operationId: ListAllTwins
            parameters:
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            -   $ref: '#/components/parameters/limit'
            -   $ref: '#/components/parameters/offset'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAllTwinsResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: List all twins.
            tags:
            - Twin
            x-codegen-request-body-name: body
        post:
            description: |-
                Create a local twin with the provided ID.

                The create is idempotent. It will not fail if the twin already exists.
            operationId: CreateTwin
            parameters:
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTwinRequestPayload'
                required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTwinResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Create a twin.
            tags:
            - Twin
            x-codegen-request-body-name: body
        put:
            description: |-
                Create or Update a local twin with the provided ID and full metadata.
                Create twin feeds wih metadata.
                This action is a PUT, the full state is applied
                (ie. if the operation succeeds the state of the twin/feeds will be the one described in the payload)
            operationId: UpsertTwin
            parameters:
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertTwinRequestPayload'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpsertTwinResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Upsert a twin with metadata, feeds and inputs.
            tags:
            - Twin
            x-codegen-request-body-name: body
    /twins/{followerTwinId}/interests/hosts/{hostId}/twins/{followedTwinId}/feeds/{followedFeedId}/samples/last:
        get:
            description: Fetch last data shared on this interest if `storeLast` is
                enable on the followedFeed
            operationId: FetchLastStoredFromLocal
            parameters:
            -   description: ID of the host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   description: ID of the follower twin
                in: path
                name: followerTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the twin owning the followed feed
                in: path
                name: followedTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the followed feed
                in: path
                name: followedFeedId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FetchInterestResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Fetch last shared.
            tags:
            - LocalFollowerInterest
            x-codegen-request-body-name: body
    /twins/{followerTwinId}/interests/twins/{followedTwinId}/feeds/{followedFeedId}/samples/last:
        get:
            description: Fetch last data shared on this interest if `storeLast` is
                enable on the followedFeed.
            operationId: FetchLastStoredLocal
            parameters:
            -   description: ID of the follower twin
                in: path
                name: followerTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the twin owning the followed feed
                in: path
                name: followedTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the followed feed
                in: path
                name: followedFeedId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FetchInterestResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Fetch last shared from a feed.
            tags:
            - LocalFollowerInterest
            x-codegen-request-body-name: body
    /twins/{senderTwinId}/interests/hosts/{hostId}/twins/{twinId}/inputs/{inputId}/messages:
        post:
            description: Send an input message from a sender twin to a receiver twin/input.
            operationId: SendInputMessageFromLocal
            parameters:
            -   description: ID of the twin sending the input message
                in: path
                name: senderTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the twin providing the input host
                in: path
                name: hostId
                required: true
                schema:
                    type: string
            -   description: ID of the twin providing the input
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the input
                in: path
                name: inputId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendInputMessageRequestPayload'
                required: true
            responses:
                '202':
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Send a message to an input.
            tags:
            - LocalFollowerInterest
            x-codegen-request-body-name: body
    /twins/{senderTwinId}/interests/twins/{twinId}/inputs/{inputId}/messages:
        post:
            description: Send an input message from a sender twin to a receiver twin/input.
            operationId: SendInputMessageLocal
            parameters:
            -   description: ID of the twin sending the input message
                in: path
                name: senderTwinId
                required: true
                schema:
                    type: string
            -   description: ID of the twin providing the input
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the input
                in: path
                name: inputId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendInputMessageRequestPayload'
                required: true
            responses:
                '202':
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Send a message to an input.
            tags:
            - LocalFollowerInterest
            x-codegen-request-body-name: body
    /twins/{twinId}:
        delete:
            description: |-
                Delete a local twin with the provided ID.

                The delete is idempotent. It will not fail if the twin does not exist.
            operationId: DeleteTwinLocal
            parameters:
            -   description: ID of the twin to delete
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTwinResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Delete a twin.
            tags:
            - LocalTwin
            x-codegen-request-body-name: body
        get:
            description: Describe a local twin.
            operationId: DescribeTwinLocal
            parameters:
            -   description: ID of the twin to describe
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DescribeTwinResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Describe a twin.
            tags:
            - LocalTwin
            x-codegen-request-body-name: body
        patch:
            description: |-
                Udapte a local twin.

                The update can be partial: it is possible to patch only a sub-part of the twin representation.
            operationId: UpdateTwinLocal
            parameters:
            -   description: ID of the twin to update
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTwinRequestPayload'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTwinResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Update a twin.
            tags:
            - LocalTwin
            x-codegen-request-body-name: body
    /twins/{twinId}/feeds:
        get:
            description: List all feeds owned by the provided local twin.
            operationId: ListAllFeedsLocal
            parameters:
            -   description: ID of the twin providing the feeds
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAllFeedsResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: List all feeds.
            tags:
            - LocalFeed
            x-codegen-request-body-name: body
        post:
            description: |-
                Create a feed owned by the provided local twin.
                The create is idempotent. It will not fail if the feed already exists.
            operationId: CreateFeedLocal
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFeedRequestPayload'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFeedResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Create a Feed.
            tags:
            - LocalFeed
            x-codegen-request-body-name: body
    /twins/{twinId}/feeds/{feedId}:
        delete:
            description: |-
                Delete a feed owned by the provided local twin.

                The delete is idempotent. It will not fail if the feed does not exist.
            operationId: DeleteFeedLocal
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the feed
                in: path
                name: feedId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteFeedResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Delete a Feed.
            tags:
            - LocalFeed
            x-codegen-request-body-name: body
        get:
            description: Describe a feed owned by the provided local twin.
            operationId: DescribeFeedLocal
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the feed to describe
                in: path
                name: feedId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DescribeFeedResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Describe a feed.
            tags:
            - LocalFeed
            x-codegen-request-body-name: body
        patch:
            description: Update the semantic description and values of a feed owned
                by the provided local twin.
            operationId: UpdateFeedLocal
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the feed
                in: path
                name: feedId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateFeedRequestPayload'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateFeedResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Update a feed.
            tags:
            - LocalFeed
            x-codegen-request-body-name: body
    /twins/{twinId}/feeds/{feedId}/shares:
        post:
            description: |-
                Share a new sample of data for the given feed owned by the provided local twin.
                Any (interest) subscribers can receive it.
            operationId: ShareFeedDataLocal
            parameters:
            -   description: ID of the twin providing the feed
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the feed
                in: path
                name: feedId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ShareFeedDataRequestPayload'
                required: true
            responses:
                '202':
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Share a new sample of data which any (interest) subscribers can
                receive.
            tags:
            - LocalFeed
            x-codegen-request-body-name: body
    /twins/{twinId}/inputs/{inputId}:
        delete:
            description: |-
                Delete an input owned by the provided local twin.

                The delete is idempotent. It will not fail if the input does not exist.
            operationId: DeleteInputLocal
            parameters:
            -   description: ID of the twin providing the input
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the input
                in: path
                name: inputId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteInputResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Delete an Input.
            tags:
            - LocalInput
            x-codegen-request-body-name: body
        get:
            description: Describe an input owned by the provided local twin.
            operationId: DescribeInputLocal
            parameters:
            -   description: ID of the twin providing the input
                in: path
                name: twinId
                required: true
                schema:
                    type: string
            -   description: ID of the input to describe
                in: path
                name: inputId
                required: true
                schema:
                    type: string
            -   $ref: '#/components/parameters/clientRef'
            -   $ref: '#/components/parameters/clientAppId'
            -   $ref: '#/components/parameters/transactionRef'
            -   $ref: '#/components/parameters/consumerGroup'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DescribeInputResponsePayload'
                    description: A successful response.
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Invalid request
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Unprocessable entity
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: Internal server error
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimeError'
                    description: An unexpected error response
                    headers:
                        Iotics-ClientAppId:
                            $ref: '#/components/headers/Iotics-ClientAppId'
                        Iotics-ClientRef:
                            $ref: '#/components/headers/Iotics-ClientRef'
                        Iotics-ConsumerGroup:
                            $ref: '#/components/headers/Iotics-ConsumerGroup'
                        Iotics-TransactionRef:
                            $ref: '#/components/headers/Iotics-TransactionRef'
            security:
            -   jwt: []
            summary: Describe an input.
            tags:
            - LocalInput
            x-codegen-request-body-name: body
servers:
-   url: /qapi
tags:
-   description: All synchronous operations (remote and local) about Feeds.
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: Feed
-   description: Operations about Host Twins.
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: Host
-   description: All operations (remote and local) about Inputs.
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: Input
-   description: Operations (remote and local) about Interests.
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: Interest
-   description: |-
        All synchronous operations about Feeds (Provides the same services as the "Feed" section
        without the optional Host Id parameter - local actions only).
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: LocalFeed
-   description: |-
        Operations about Interests (Provides the same services as the "Interest" section
        without the optional Host Id parameter).
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: LocalFollowerInterest
-   description: |-
        All operations about Inputs (Provides the same services as the "Input" section
        without the optional Host Id parameter - local actions only).
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: LocalInput
-   description: |-
        Operations about Twins (Provides the same services as the "Twin" section
        without the optional Host Id parameter - local actions only).
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: LocalTwin
-   description: Synchronous search.
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: Search
-   description: Operations about Twins.
    externalDocs:
        description: Find out more
        url: http://todo-add-iotic-doc-link
    name: Twin